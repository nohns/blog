---
interface Props {
  post: any;
}
const { post } = Astro.props;
---

<article
  class="relative border border-terminal-green/20 p-6 rounded hover:border-terminal-green/40 transition-colors group focus-within:ring-2 focus-within:ring-terminal-green"
>
  <a
    href={`/posts/${post.slug}`}
    class="absolute inset-0 z-10"
    aria-label={`Read post: ${post.data.title}`}
    tabindex="0"
    role="link"></a>
  <h2
    class="text-2xl font-bold mb-2 group-hover:text-terminal-green transition-colors"
  >
    {post.data.title}
  </h2>
  <div class="flex items-center gap-4 text-sm text-terminal-text/60 mb-4">
    <time datetime={post.data.date.toISOString()}>
      {
        post.data.date.toLocaleDateString("en-US", {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }
    </time>
    {
      post.data.tags && (
        <div class="flex gap-2">
          {post.data.tags.map((tag: string) => (
            <a
              href={`/tags/${tag}`}
              class="text-terminal-amber hover:text-terminal-cyan transition-colors"
              onclick="event.stopPropagation()"
              tabindex="0"
              role="link"
            >
              #{tag}
            </a>
          ))}
        </div>
      )
    }
  </div>
  {
    post.data.description && (
      <p class="text-terminal-text/80">{post.data.description}</p>
    )
  }
</article>
